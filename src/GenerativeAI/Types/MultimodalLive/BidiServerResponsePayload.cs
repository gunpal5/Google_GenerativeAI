using System.Text.Json.Serialization;

namespace GenerativeAI.Types;

/// <summary>
/// Represents a bidirectional response payload containing various types of server responses in a multimodal live session.
/// </summary>
public class BidiResponsePayload
{
    /// <summary>
    /// Gets or sets a message sent in response to a <see cref="BidiGenerateContentSetup"/> message from the client.
    /// </summary>
    [JsonPropertyName("setupComplete")]
    public BidiGenerateContentSetupComplete? SetupComplete { get; set; }

    /// <summary>
    /// Gets or sets an incremental server update generated by the model in response to client messages.
    /// </summary>
    [JsonPropertyName("serverContent")]
    public BidiGenerateContentServerContent? ServerContent { get; set; }

    /// <summary>
    /// Gets or sets a request for the client to execute the <see cref="FunctionCall"/> and return the responses with the matching <see cref="FunctionCall.Id"/>.
    /// </summary>
    [JsonPropertyName("toolCall")]
    public BidiGenerateContentToolCall? ToolCall { get; set; }

    /// <summary>
    /// Gets or sets a notification for the client that a previously issued <see cref="BidiGenerateContentToolCall"/> with the specified ID should have been not executed and should be cancelled.
    /// </summary>
    [JsonPropertyName("toolCallCancellation")]
    public BidiGenerateContentToolCallCancellation? ToolCallCancellation { get; set; }
    
    /// <summary>
    /// Gets or sets a notification that server will disconnect soon.
    /// </summary>
    [JsonPropertyName("goAway")]
    public LiveServerGoAway? GoAway { get; set; }

    /// <summary>
    /// Gets or sets an update of the session resumption state.
    /// </summary>
    [JsonPropertyName("sessionResumptionUpdate")]
    public LiveServerSessionResumptionUpdate? SessionResumptionUpdate { get; set; }
}